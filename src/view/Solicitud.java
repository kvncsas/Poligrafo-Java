package view;

import classes.Conexion;
import classes.DatosPrincipales;
import icons.Question;
import icons.Shocked;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static view.MenuPrincipal.na;

/**
 *
 * @author Kevin Casas
 */
public class Solicitud extends javax.swing.JInternalFrame {

    public Solicitud() {
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        initComponents();
    }

    Shocked iconShocked = new Shocked();
    Question iconQuestion = new Question();

    public void listarRegistros() {

        String lugar = DatosPrincipales.getCiudadExamen();

        DefaultTableModel modelo = (DefaultTableModel) this.tablac.getModel();

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        int a = 0;
        String sql = "SELECT fechaPeticion, horaPeticion, nombreEvaluado, tipoIdentificacion, numeroIdentificacion, "
                + "areaEvaluado, nombreSolicitante, cargoSolicitante, ciudadPeticion, tipoConvocatoria "
                + "FROM solicitud_poli WHERE ciudadPeticion = '" + lugar + "' "
                + " AND estadoPeticion = 'Asignado' "
                + "";
        String filas[] = new String[10];
        try {
            Connection con = Conexion.connection;
            Statement st = con.createStatement();
            ResultSet r = st.executeQuery(sql);
            while (r.next()) {
                filas[0] = r.getString("fechaPeticion");
                filas[1] = r.getString("horaPeticion");
                filas[2] = r.getString("nombreEvaluado");
                filas[3] = r.getString("tipoIdentificacion");
                filas[4] = r.getString("numeroIdentificacion");
                filas[5] = r.getString("areaEvaluado");
                filas[6] = r.getString("nombreSolicitante");
                filas[7] = r.getString("cargoSolicitante");
                filas[8] = r.getString("ciudadPeticion");
                filas[9] = r.getString("tipoConvocatoria");
                a++;
                modelo.addRow(filas);
            }
        } catch (SQLException ex) {
        }
    }

    public void goToURL(String URL) {
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI(URL);
                    desktop.browse(uri);
                } catch (Exception e) {
                }
            }
        }
    }

    public void CentrarVentana(JInternalFrame internalframe) {
        int x = (na.getWidth() / 2) - internalframe.getWidth() / 2;
        int y = (na.getHeight() / 2) - internalframe.getHeight() / 2;
        if (internalframe.isShowing()) {
            internalframe.setLocation(x, y);
        } else {
            na.add(internalframe);
            internalframe.setLocation(x, y);
            internalframe.show();
        }
    }

    public void examenSinRegistros() {
        CreacionExamen creacionE = new CreacionExamen();

        int ans = JOptionPane.showConfirmDialog(null, "¿Desea crear examen sin registros previos?", "Inicio de examen", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
        if (ans == 0) {
            this.setVisible(false);
            DatosPrincipales.setOpcionExamen("nuevo");
            CreacionExamen.place.setText(DatosPrincipales.getCiudadExamen());
            creacionE.show();
            CentrarVentana(creacionE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloexamenpre = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablac = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tituloexamenpre.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        tituloexamenpre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloexamenpre.setText("Exámenes pendientes");

        jPanel22.setBackground(java.awt.Color.red);
        jPanel22.setForeground(new java.awt.Color(255, 255, 255));
        jPanel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel22.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel22MouseMoved(evt);
            }
        });
        jPanel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel22MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel22MouseExited(evt);
            }
        });

        jLabel70.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/multiply.png"))); // NOI18N
        jLabel70.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel70MouseMoved(evt);
            }
        });
        jLabel70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel70MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel70MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cerrar");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel70))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Seleccione el examen progrado para iniciar con la creación del examen.");

        tablac.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        tablac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha programada", "Hora programada", "Nombre Evaluado", "Tipo identificación", "Número Identificación", "Área Evaluado", "Nombre Solicitante", "Cargo Solicitante", "Ciudad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablacMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablac);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        jPanel9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel9MouseMoved(evt);
            }
        });
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel9MouseExited(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new-document.png"))); // NOI18N
        jLabel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel50MouseClicked(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Nuevo registro");
        jLabel47.setAlignmentX(1.0F);
        jLabel47.setAlignmentY(1.0F);
        jLabel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel47MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel47)
                .addGap(43, 43, 43))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel47)
                    .addComponent(jLabel50))
                .addGap(11, 11, 11))
        );

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel10MouseMoved(evt);
            }
        });
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel10MouseExited(evt);
            }
        });

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying-glass.png"))); // NOI18N
        jLabel51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel51MouseClicked(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Revisar registros");
        jLabel48.setAlignmentX(1.0F);
        jLabel48.setAlignmentY(1.0F);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel48)
                .addGap(43, 43, 43))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel51))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(322, 322, 322)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(322, 322, 322)
                                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
            .addComponent(tituloexamenpre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(tituloexamenpre)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel70MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel70MouseMoved

    }//GEN-LAST:event_jLabel70MouseMoved

    private void jLabel70MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel70MouseClicked
        //goToURL("https://www.youtube.com/");
    }//GEN-LAST:event_jLabel70MouseClicked

    private void jLabel70MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel70MouseExited

    }//GEN-LAST:event_jLabel70MouseExited

    private void jPanel22MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseMoved

    }//GEN-LAST:event_jPanel22MouseMoved

    private void jPanel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseClicked
        int salir = JOptionPane.showConfirmDialog(null, "¿Desea cancelar la actualización de los exámenes realizados en modo offline?\n Tenga presente que la notificación seguirá activa en el menú principal", "Cargue de datos de modo offline", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconShocked);
        if (salir == 0) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_jPanel22MouseClicked

    private void jPanel22MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseExited

    }//GEN-LAST:event_jPanel22MouseExited

    private void tablacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacMouseClicked

        Novedad nove = new Novedad();
        int clic_tabla = 0;
        clic_tabla = tablac.rowAtPoint(evt.getPoint());

        String a = "" + tablac.getValueAt(clic_tabla, 0);
        String b = "" + tablac.getValueAt(clic_tabla, 1);
        String c = "" + tablac.getValueAt(clic_tabla, 2);
        String d = "" + tablac.getValueAt(clic_tabla, 3);
        String e = "" + tablac.getValueAt(clic_tabla, 4);
        String f = "" + tablac.getValueAt(clic_tabla, 5);
        String g = "" + tablac.getValueAt(clic_tabla, 6);
        String h = "" + tablac.getValueAt(clic_tabla, 7);
        String i = "" + tablac.getValueAt(clic_tabla, 8);

        System.out.println("1  " + a);
        System.out.println("2  " + b);
        System.out.println("3  " + c);
        System.out.println("4  " + d);
        System.out.println("5  " + e);
        System.out.println("6  " + f);
        System.out.println("7  " + g);
        System.out.println("8  " + h);
        System.out.println("9  " + i);

        CreacionExamen creacionE = new CreacionExamen();

        int ans = JOptionPane.showConfirmDialog(null, "¿Desea iniciar el examen?", "Inicio de examen", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
        if (ans == 0) {
            this.setVisible(false);
            DatosPrincipales.setOpcionExamen("nuevo");
            CreacionExamen.place.setText(DatosPrincipales.getCiudadExamen());
            CreacionExamen.txtnomevaluado.setText(c);
            CreacionExamen.cbxtipoiden.setSelectedItem(d);
            CreacionExamen.txtnoidexaminado.setText(e);
            CreacionExamen.txtareaexaminado.setText(f);
            CreacionExamen.txtnomsolicitante.setText(g);
            CreacionExamen.txtcargosolicitante.setText(h);
            creacionE.show();
            CentrarVentana(creacionE);
        }

//        if (tipobuscador.equals("creacion")) {
//            if (estadoR.equals("Novedad")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona presenta una novedad!\n ¿Desea verla?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    this.setVisible(false);
//                    MenuPrincipal.na.add(nove);
//                    nove.show();
//                    CentrarVentana(nove);
//                }
//            } else if (estadoR.equals("Completo")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona tiene un examen completo!\n ¿Desea verlo?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    DatoGeneral datosge = new DatoGeneral();
//                    DatoPersonal datosper = new DatoPersonal();
//                    //                    int anchoprograma = (na.getWidth() + MenuPrincipal.jDesktopPane1.getWidth()) - MenuPrincipal.jDesktopPane1.getWidth();
//                    //                    int altoprograma = (na.getHeight());
//                    //                    datosge.setSize(anchoprograma, altoprograma);
//                    MenuPrincipal.na.add(datosge);
//                    datosge.show();
//
//                    DatoGeneral.paratodo.add(datosper);
//                    datosper.show();
//
//                    //                    DatoGeneral.examtype.setText("Ingreso");
//                    DatoGeneral.btneditar.setVisible(true);
//                    DatoGeneral.btnsave.setVisible(false);
//                    //                                setNombreSoli(respuesta);
//                    //                                setCargoSoli(respuesta2);
//                    //                                DatoPersonal.txtpersonasolicitante.setText(getNombreSoli());
//                    MenuPrincipal.jPanel9.setVisible(false);
//                    MenuPrincipal.jPanel10.setVisible(false);
//
//                    //                            DatoPersonal.txtareaaspira.setText(txtareaexaminado.getText());
//                    DatoGeneral.jLabel2.setForeground(Color.red);
//                    DatoGeneral.fechaizquierda.setVisible(false);
//                    DatoGeneral.fechaderecha.setVisible(true);
//                    DatoPersonal.cargoactual.setVisible(false);
//                    DatoPersonal.txtcargoactual.setVisible(false);
//                    DatoPersonal.rtxtcargoactual.setVisible(false);
//                    DatoPersonal.areaactual.setVisible(false);
//                    DatoPersonal.txtareaactual.setVisible(false);
//                    DatoPersonal.rtxtareaactual.setVisible(false);
//                    DatoPersonal.cargoaspira.setVisible(true);
//                    DatoPersonal.txtcargoaspira.setVisible(true);
//                    DatoPersonal.rtxtcargoaspira.setVisible(true);
//                    DatoPersonal.areaaspira.setVisible(true);
//                    DatoPersonal.txtareaaspira.setVisible(true);
//                    DatoPersonal.rtxtareaaspira.setVisible(true);
//                    DatoPersonal.personasolicitante.setVisible(true);
//                    DatoPersonal.rtxtpersonasolicitante.setVisible(true);
//
//                    DatoGeneral.tituloexamenpre.setVisible(true);
//
//                    try {
//                        PreparedStatement sql = Conexion.connection.prepareStatement("SELECT * FROM datos_generales_poli WHERE no_id = " + txtnoidexaminado.getText() + " and t_identificacion = '" + tipoid_creacion + "' ");
//                        ResultSet rs = sql.executeQuery();
//                        rs.next();
//                        DatoPersonal.txtnombre.setText(rs.getString("nombre"));
//                        DatoPersonal.cbxtipoiden.setSelectedItem(rs.getString("t_identificacion"));
//                        DatoPersonal.txtnoiden.setText(rs.getString("no_id"));
//                        DatoPersonal.txtexpedidos.setText(rs.getString("lugar_exp"));
//                        DatoPersonal.txtlugarnaci.setText(rs.getString("lugar_naci"));
//                        DatoPersonal.fechanaci.setDate(rs.getDate("fecha_naci"));
//                        DatoPersonal.txtdireccion.setText(rs.getString("direccion"));
//                        DatoPersonal.txtbarrio.setText(rs.getString("barrio"));
//                        DatoPersonal.txtlocalidad.setText(rs.getString("localidad"));
//                        DatoPersonal.cbxestrato.setSelectedItem(rs.getString("estrato"));
//                        DatoPersonal.txtedad.setText(rs.getString("edad"));
//                        DatoPersonal.txttelcelu.setText(rs.getString("tel_celular"));
//                        DatoPersonal.txttelfijo.setText(rs.getString("tel_fijo"));
//                        DatoPersonal.txtemail.setText(rs.getString("email"));
//                        DatoPersonal.txtcargoactual.setText(rs.getString("cargoactual"));
//                        DatoPersonal.txtareaactual.setText(rs.getString("areaactual"));
//                        DatoPersonal.txtcargoaspira.setText(rs.getString("cargoaspira"));
//                        DatoPersonal.txtareaaspira.setText(rs.getString("areaaspira"));
//                        DatoPersonal.txtpersonasolicitante.setText(rs.getString("solicitador"));
//                        String g = rs.getString("genero");
//                        if (g.equals("Masculino")) {
//                            DatoPersonal.chbxmasculino.setSelected(true);
//                        } else if (g.equals("Femenino")) {
//                            DatoPersonal.chbxfemenino.setSelected(true);
//                        }
//                    } catch (SQLException ex) {
//                        JOptionPane.showMessageDialog(null, "Error al buscar: " + ex.getMessage());
//                    }
//                }
//            } else if (estadoR.equals("Incompleto")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona tiene un examen incompleto!\n ¿Desea verlo?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    DatoGeneral datosge = new DatoGeneral();
//                    DatoPersonal datosper = new DatoPersonal();
//                    //                    int anchoprograma = (na.getWidth() + MenuPrincipal.jDesktopPane1.getWidth()) - MenuPrincipal.jDesktopPane1.getWidth();
//                    //                    int altoprograma = (na.getHeight());
//                    //                    datosge.setSize(anchoprograma, altoprograma);
//                    MenuPrincipal.na.add(datosge);
//                    datosge.show();
//
//                    DatoGeneral.paratodo.add(datosper);
//                    datosper.show();
//
//                    //                    DatoGeneral.examtype.setText("Ingreso");
//                    DatoGeneral.btneditar.setVisible(true);
//                    DatoGeneral.btnsave.setVisible(false);
//                    //                                setNombreSoli(respuesta);
//                    //                                setCargoSoli(respuesta2);
//                    //                                DatoPersonal.txtpersonasolicitante.setText(getNombreSoli());
//                    MenuPrincipal.jPanel9.setVisible(false);
//                    MenuPrincipal.jPanel10.setVisible(false);
//
//                    //                            DatoPersonal.txtareaaspira.setText(txtareaexaminado.getText());
//                    DatoGeneral.jLabel2.setForeground(Color.red);
//                    DatoGeneral.fechaizquierda.setVisible(false);
//                    DatoGeneral.fechaderecha.setVisible(true);
//                    DatoPersonal.cargoactual.setVisible(false);
//                    DatoPersonal.txtcargoactual.setVisible(false);
//                    DatoPersonal.rtxtcargoactual.setVisible(false);
//                    DatoPersonal.areaactual.setVisible(false);
//                    DatoPersonal.txtareaactual.setVisible(false);
//                    DatoPersonal.rtxtareaactual.setVisible(false);
//                    DatoPersonal.cargoaspira.setVisible(true);
//                    DatoPersonal.txtcargoaspira.setVisible(true);
//                    DatoPersonal.rtxtcargoaspira.setVisible(true);
//                    DatoPersonal.areaaspira.setVisible(true);
//                    DatoPersonal.txtareaaspira.setVisible(true);
//                    DatoPersonal.rtxtareaaspira.setVisible(true);
//                    DatoPersonal.personasolicitante.setVisible(true);
//                    DatoPersonal.rtxtpersonasolicitante.setVisible(true);
//
//                    DatoGeneral.tituloexamenpre.setVisible(true);
//
//                    try {
//                        PreparedStatement sql = Conexion.connection.prepareStatement("SELECT * FROM datos_generales_poli WHERE no_id = " + txtnoidexaminado.getText() + " and t_identificacion = '" + tipoid_creacion + "' ");
//                        ResultSet rs = sql.executeQuery();
//                        rs.next();
//                        DatoPersonal.txtnombre.setText(rs.getString("nombre"));
//                        DatoPersonal.cbxtipoiden.setSelectedItem(rs.getString("t_identificacion"));
//                        DatoPersonal.txtnoiden.setText(rs.getString("no_id"));
//                        DatoPersonal.txtexpedidos.setText(rs.getString("lugar_exp"));
//                        DatoPersonal.txtlugarnaci.setText(rs.getString("lugar_naci"));
//                        DatoPersonal.fechanaci.setDate(rs.getDate("fecha_naci"));
//                        DatoPersonal.txtdireccion.setText(rs.getString("direccion"));
//                        DatoPersonal.txtbarrio.setText(rs.getString("barrio"));
//                        DatoPersonal.txtlocalidad.setText(rs.getString("localidad"));
//                        DatoPersonal.cbxestrato.setSelectedItem(rs.getString("estrato"));
//                        DatoPersonal.txtedad.setText(rs.getString("edad"));
//                        DatoPersonal.txttelcelu.setText(rs.getString("tel_celular"));
//                        DatoPersonal.txttelfijo.setText(rs.getString("tel_fijo"));
//                        DatoPersonal.txtemail.setText(rs.getString("email"));
//                        DatoPersonal.txtcargoactual.setText(rs.getString("cargoactual"));
//                        DatoPersonal.txtareaactual.setText(rs.getString("areaactual"));
//                        DatoPersonal.txtcargoaspira.setText(rs.getString("cargoaspira"));
//                        DatoPersonal.txtareaaspira.setText(rs.getString("areaaspira"));
//                        DatoPersonal.txtpersonasolicitante.setText(rs.getString("solicitador"));
//                        String g = rs.getString("genero");
//                        if (g.equals("Masculino")) {
//                            DatoPersonal.chbxmasculino.setSelected(true);
//                        } else if (g.equals("Femenino")) {
//                            DatoPersonal.chbxfemenino.setSelected(true);
//                        }
//                    } catch (SQLException ex) {
//                        JOptionPane.showMessageDialog(null, "Error al buscar: " + ex.getMessage());
//                    }
//
//                }
//            }
//        } else if (tipobuscador.equals("consultas")) {
//            if (estadoR.equals("Novedad")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona presenta una novedad!\n ¿Desea verla?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    this.setVisible(false);
//                    MenuPrincipal.na.add(nove);
//                    nove.show();
//                    CentrarVentana(nove);
//                }
//            } else if (estadoR.equals("Completo")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona tiene un examen completo!\n ¿Desea verlo?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    DatoGeneral datosge = new DatoGeneral();
//                    DatoPersonal datosper = new DatoPersonal();
//                    //                    int anchoprograma = (na.getWidth() + MenuPrincipal.jDesktopPane1.getWidth()) - MenuPrincipal.jDesktopPane1.getWidth();
//                    //                    int altoprograma = (na.getHeight());
//                    //                    datosge.setSize(anchoprograma, altoprograma);
//                    MenuPrincipal.na.add(datosge);
//                    datosge.show();
//
//                    DatoGeneral.paratodo.add(datosper);
//                    datosper.show();
//
//                    //                    DatoGeneral.examtype.setText("Ingreso");
//                    DatoGeneral.btneditar.setVisible(true);
//                    DatoGeneral.btnsave.setVisible(false);
//                    //                                setNombreSoli(respuesta);
//                    //                                setCargoSoli(respuesta2);
//                    //                                DatoPersonal.txtpersonasolicitante.setText(getNombreSoli());
//                    MenuPrincipal.jPanel9.setVisible(false);
//                    MenuPrincipal.jPanel10.setVisible(false);
//
//                    //                            DatoPersonal.txtareaaspira.setText(txtareaexaminado.getText());
//                    DatoGeneral.jLabel2.setForeground(Color.red);
//                    DatoGeneral.fechaizquierda.setVisible(false);
//                    DatoGeneral.fechaderecha.setVisible(true);
//                    DatoPersonal.cargoactual.setVisible(false);
//                    DatoPersonal.txtcargoactual.setVisible(false);
//                    DatoPersonal.rtxtcargoactual.setVisible(false);
//                    DatoPersonal.areaactual.setVisible(false);
//                    DatoPersonal.txtareaactual.setVisible(false);
//                    DatoPersonal.rtxtareaactual.setVisible(false);
//                    DatoPersonal.cargoaspira.setVisible(true);
//                    DatoPersonal.txtcargoaspira.setVisible(true);
//                    DatoPersonal.rtxtcargoaspira.setVisible(true);
//                    DatoPersonal.areaaspira.setVisible(true);
//                    DatoPersonal.txtareaaspira.setVisible(true);
//                    DatoPersonal.rtxtareaaspira.setVisible(true);
//                    DatoPersonal.personasolicitante.setVisible(true);
//                    DatoPersonal.rtxtpersonasolicitante.setVisible(true);
//
//                    DatoGeneral.tituloexamenpre.setVisible(true);
//
//                    try {
//                        PreparedStatement sql = Conexion.connection.prepareStatement("SELECT * FROM datos_generales_poli WHERE no_id = " + txtnumiden.getText());
//                        ResultSet rs = sql.executeQuery();
//                        rs.next();
//                        DatoPersonal.txtnombre.setText(rs.getString("nombre"));
//                        DatoPersonal.cbxtipoiden.setSelectedItem(rs.getString("t_identificacion"));
//                        DatoPersonal.txtnoiden.setText(rs.getString("no_id"));
//                        DatoPersonal.txtexpedidos.setText(rs.getString("lugar_exp"));
//                        DatoPersonal.txtlugarnaci.setText(rs.getString("lugar_naci"));
//                        DatoPersonal.fechanaci.setDate(rs.getDate("fecha_naci"));
//                        DatoPersonal.txtdireccion.setText(rs.getString("direccion"));
//                        DatoPersonal.txtbarrio.setText(rs.getString("barrio"));
//                        DatoPersonal.txtlocalidad.setText(rs.getString("localidad"));
//                        DatoPersonal.cbxestrato.setSelectedItem(rs.getString("estrato"));
//                        DatoPersonal.txtedad.setText(rs.getString("edad"));
//                        DatoPersonal.txttelcelu.setText(rs.getString("tel_celular"));
//                        DatoPersonal.txttelfijo.setText(rs.getString("tel_fijo"));
//                        DatoPersonal.txtemail.setText(rs.getString("email"));
//                        DatoPersonal.txtcargoactual.setText(rs.getString("cargoactual"));
//                        DatoPersonal.txtareaactual.setText(rs.getString("areaactual"));
//                        DatoPersonal.txtcargoaspira.setText(rs.getString("cargoaspira"));
//                        DatoPersonal.txtareaaspira.setText(rs.getString("areaaspira"));
//                        DatoPersonal.txtpersonasolicitante.setText(rs.getString("solicitador"));
//                        String g = rs.getString("genero");
//                        if (g.equals("Masculino")) {
//                            DatoPersonal.chbxmasculino.setSelected(true);
//                        } else if (g.equals("Femenino")) {
//                            DatoPersonal.chbxfemenino.setSelected(true);
//                        }
//                    } catch (SQLException ex) {
//                        JOptionPane.showMessageDialog(null, "Error al buscar: " + ex.getMessage());
//                    }
//                }
//                JOptionPane.showMessageDialog(this, "Es un examen completo");
//            } else if (estadoR.equals("Incompleto")) {
//                int ans = JOptionPane.showConfirmDialog(null, "¡La persona tiene un examen incompleto!\n ¿Desea verlo?", "Busqueda de datos examinado", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, iconQuestion);
//                if (ans == 0) {
//                    DatoGeneral datosge = new DatoGeneral();
//                    DatoPersonal datosper = new DatoPersonal();
//                    //                    int anchoprograma = (na.getWidth() + MenuPrincipal.jDesktopPane1.getWidth()) - MenuPrincipal.jDesktopPane1.getWidth();
//                    //                    int altoprograma = (na.getHeight());
//                    //                    datosge.setSize(anchoprograma, altoprograma);
//                    MenuPrincipal.na.add(datosge);
//                    datosge.show();
//
//                    DatoGeneral.paratodo.add(datosper);
//                    datosper.show();
//
//                    //                    DatoGeneral.examtype.setText("Ingreso");
//                    DatoGeneral.btneditar.setVisible(true);
//                    DatoGeneral.btnsave.setVisible(false);
//                    //                                setNombreSoli(respuesta);
//                    //                                setCargoSoli(respuesta2);
//                    //                                DatoPersonal.txtpersonasolicitante.setText(getNombreSoli());
//                    MenuPrincipal.jPanel9.setVisible(false);
//                    MenuPrincipal.jPanel10.setVisible(false);
//
//                    //                            DatoPersonal.txtareaaspira.setText(txtareaexaminado.getText());
//                    DatoGeneral.jLabel2.setForeground(Color.red);
//                    DatoGeneral.fechaizquierda.setVisible(false);
//                    DatoGeneral.fechaderecha.setVisible(true);
//                    DatoPersonal.cargoactual.setVisible(false);
//                    DatoPersonal.txtcargoactual.setVisible(false);
//                    DatoPersonal.rtxtcargoactual.setVisible(false);
//                    DatoPersonal.areaactual.setVisible(false);
//                    DatoPersonal.txtareaactual.setVisible(false);
//                    DatoPersonal.rtxtareaactual.setVisible(false);
//                    DatoPersonal.cargoaspira.setVisible(true);
//                    DatoPersonal.txtcargoaspira.setVisible(true);
//                    DatoPersonal.rtxtcargoaspira.setVisible(true);
//                    DatoPersonal.areaaspira.setVisible(true);
//                    DatoPersonal.txtareaaspira.setVisible(true);
//                    DatoPersonal.rtxtareaaspira.setVisible(true);
//                    DatoPersonal.personasolicitante.setVisible(true);
//                    DatoPersonal.rtxtpersonasolicitante.setVisible(true);
//
//                    DatoGeneral.tituloexamenpre.setVisible(true);
//
//                    try {
//                        PreparedStatement sql = Conexion.connection.prepareStatement("SELECT * FROM datos_generales_poli WHERE no_id = " + txtnumiden.getText());
//                        ResultSet rs = sql.executeQuery();
//                        rs.next();
//                        DatoPersonal.txtnombre.setText(rs.getString("nombre"));
//                        DatoPersonal.cbxtipoiden.setSelectedItem(rs.getString("t_identificacion"));
//                        DatoPersonal.txtnoiden.setText(rs.getString("no_id"));
//                        DatoPersonal.txtexpedidos.setText(rs.getString("lugar_exp"));
//                        DatoPersonal.txtlugarnaci.setText(rs.getString("lugar_naci"));
//                        DatoPersonal.fechanaci.setDate(rs.getDate("fecha_naci"));
//                        DatoPersonal.txtdireccion.setText(rs.getString("direccion"));
//                        DatoPersonal.txtbarrio.setText(rs.getString("barrio"));
//                        DatoPersonal.txtlocalidad.setText(rs.getString("localidad"));
//                        DatoPersonal.cbxestrato.setSelectedItem(rs.getString("estrato"));
//                        DatoPersonal.txtedad.setText(rs.getString("edad"));
//                        DatoPersonal.txttelcelu.setText(rs.getString("tel_celular"));
//                        DatoPersonal.txttelfijo.setText(rs.getString("tel_fijo"));
//                        DatoPersonal.txtemail.setText(rs.getString("email"));
//                        DatoPersonal.txtcargoactual.setText(rs.getString("cargoactual"));
//                        DatoPersonal.txtareaactual.setText(rs.getString("areaactual"));
//                        DatoPersonal.txtcargoaspira.setText(rs.getString("cargoaspira"));
//                        DatoPersonal.txtareaaspira.setText(rs.getString("areaaspira"));
//                        DatoPersonal.txtpersonasolicitante.setText(rs.getString("solicitador"));
//                        String g = rs.getString("genero");
//                        if (g.equals("Masculino")) {
//                            DatoPersonal.chbxmasculino.setSelected(true);
//                        } else if (g.equals("Femenino")) {
//                            DatoPersonal.chbxfemenino.setSelected(true);
//                        }
//                    } catch (SQLException ex) {
//                        JOptionPane.showMessageDialog(null, "Error al buscar: " + ex.getMessage());
//                    }
//
//                }
//                JOptionPane.showMessageDialog(this, "Es un examen incompleto :|");
//            }
//        }
        //        txtCodigo.setText(String.valueOf(codigo));
        //        txtNombre.setText(nombre);
        //        txtPrecio.setText(String.valueOf(precio));
        //        txtDescripcion.setText(String.valueOf(descripcion));
        //        try {
        //            JLabel lbl = (JLabel) tabla.getValueAt(clic_tabla, 4);
        //            lblFoto.setIcon(lbl.getIcon());
        //        } catch (Exception ex) {
        //        }
    }//GEN-LAST:event_tablacMouseClicked

    private void jPanel9MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseMoved

    }//GEN-LAST:event_jPanel9MouseMoved

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        examenSinRegistros();
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jPanel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseExited

    }//GEN-LAST:event_jPanel9MouseExited

    private void jPanel10MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10MouseMoved

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10MouseClicked

    private void jPanel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10MouseExited

    private void jLabel51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel51MouseClicked
        goToURL("http://localhost:8080/menu/");
    }//GEN-LAST:event_jLabel51MouseClicked

    private void jLabel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseClicked
        examenSinRegistros();
    }//GEN-LAST:event_jLabel47MouseClicked

    private void jLabel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseClicked
        examenSinRegistros();
    }//GEN-LAST:event_jLabel50MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablac;
    private javax.swing.JLabel tituloexamenpre;
    // End of variables declaration//GEN-END:variables
}
